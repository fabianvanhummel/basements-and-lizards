{"version":3,"sources":["bm-app/OverviewTab.jsx","components/Buttons.jsx","bm-app/Reaction.jsx","modules/gameEndingFunctions.js","modules/requirements.js","modules/listFunctions.js","components/Path.jsx","components/Item.jsx","components/Npc.jsx","components/Thing.jsx","components/Elements.jsx","components/Location.jsx","bm-app/NpcTalk.jsx","bm-app/ThingInteract.jsx","components/Hint.jsx","components/HintButton.jsx","bm-app/Combat.jsx","bm-app/GameTab.jsx","modules/hintFunctions.js","bm-app/InventoryTab.jsx","bm-app/HistoryTab.jsx","bm-app/FinishTab.jsx","bm-app/Router.jsx","modules/actions.js","bm-app/App.jsx","images/backgrounds.js","MainApp.jsx","index.js"],"names":["OverviewTab","book","gameState","className","name","description","locations","location","inventoryItems","length","characters","map","character","index","src","image","width","height","alt","race","title","id","pastEvents","slice","event","item","DefaultButton","children","props","ButtonToggleBlocked","showBlockedState","setShowBlockedState","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","colorMap","EVENT_HAPPENS","FOLLOW_PATH","ARRIVE_AT_LOCATION","PICK_UP_ITEM","GET_ITEM_NPC","GET_ITEM_THING","GET_ITEM_COMBAT","NPC_INTERACTION","NPC_RESPONSE","TELEPORTED","THING_INTERACTION","COMBAT_START","COMBAT_MOVE","COMBAT_END","GAME_FINISHED","titleMap","Reaction","type","dismiss","navigate","useNavigate","message","goToVictoryWindow","checkRequirements","requirements","reqMet","blocked","forEach","requirement","includes","getNpc","npcId","npc","npcs","options","makeNpcTalkOptionsList","getThing","thingId","thing","things","makeThingInteractOptionsList","getLocation","locationId","checkOverride","items","makeLocationItemList","makeLocationNpcList","makeLocationThingList","paths","makeLocationPathList","override","find","byLocationId","getCombat","combatId","combat","combats","makeCombatOptionsList","makeInventoryItemList","itemId","option","text","response","events","toLocationId","path","isPresent","filter","Path","handleAction","tag","color","disabled","Item","InventoryItem","window","open","Npc","Thing","ElementList","elements","useState","elementList","element","ElementHeader","Location","NpcTalk","ThingInteract","Hint","hintText","toggle","HintButton","toggled","setToggled","Combat","combatTitle","GameTab","changeLog","reactions","setReactions","useEffect","hint","checkForHints","reaction","i","newReactions","_","j","InventoryTab","inventoryItem","START_STORY","TAKE_PATH","TAKE_ITEM","START_NPC","TALK_NPC","END_NPC","START_THING","INTERACT_THING","END_THING","MOVE_COMBAT","END_COMBAT","textMap","HistoryTab","history","reversedHistory","reverse","action","steps","FinishTab","History","gameFinished","Router","backgroundImageUrl","style","backgroundImage","to","fillRule","doEvents","eventIds","newEventIds","revertEventIds","eventId","push","revertEvents","finalEvent","App","setGameState","setChangeLog","setHistory","applyAction","newGameState","eventResponse","x","locationCombat","handleTakeItem","handleTakePath","handleStartNpc","teleported","handleTalkNpc","handleEndNpc","handleStartThing","handleInteractThing","handleEndThing","handleMoveCombat","handleEndCombat","backgroundImages","Math","floor","random","bookList","jasper","fabby","ChooseBook","setBook","MainApp","setLoading","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d435a23.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const OverviewTab = ({ book, gameState }) => {\r\n  return (\r\n    <div className=\"text-center mt-4 w-4/6 m-auto\">\r\n      <div className=\"font-sans text-3xl\">Welcome (back) to </div>\r\n      <div className=\"font-sans text-5xl\">{book.name}</div>\r\n      <div className=\"grid mt-16\">\r\n        <div className=\"mx-4 bg-blue-50 rounded-lg shadow-md py-4\">\r\n          <div className=\"font-sans text-3xl \">Description</div>\r\n          <div className=\"justify-center items-center flex overflow-y-auto\">\r\n            {book.description}\r\n          </div>\r\n        </div>\r\n        <div className=\"mx-4 bg-fuchsia-50 rounded-lg shadow-md mt-4 py-4\">\r\n          <div className=\"font-sans text-3xl \">Statistics</div>\r\n          <div className=\"flex flex-col justify-center\">\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Time played:\r\n              <div className=\"font-bold\">Way too short</div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Current Location\r\n              <div className=\"font-bold\">\r\n                {book.locations[gameState.location].name}\r\n              </div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Enemies defeated:\r\n              <div className=\"font-bold\">Not yet implemented</div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Items picked up:\r\n              <div className=\"font-bold\">{gameState.inventoryItems.length}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mx-4 bg-yellow-50 rounded-lg shadow-md mt-4 py-4\">\r\n          <div className=\"font-sans text-3xl\">Party</div>\r\n          <div className=\"w-5/6 mx-auto my-4 mr-0\">\r\n            {book.characters &&\r\n              book.characters.map((character, index) => {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"rounded-md w-full my-2 grid grid-flow-col auto-cols-max content-center\"\r\n                  >\r\n                    <div className=\"border-2 border-orange-200 items-center m-auto w-full\">\r\n                      <img\r\n                        className=\"m-auto\"\r\n                        src={character.image}\r\n                        width=\"108\"\r\n                        height=\"128\"\r\n                        alt=\"\"\r\n                      ></img>\r\n                    </div>\r\n                    <div\r\n                      className=\"border-2 border-orange-200 w-48\"\r\n                      key={character.id}\r\n                    >\r\n                      <p className=\"text-lg \">{character.name}</p>\r\n                      <p> {character.race}</p>\r\n                      <p>'{character.title}'</p>\r\n                    </div>\r\n                    <div className=\"border-2 border-orange-200 max-h-28 overflow-auto w-96\">\r\n                      {character.description\r\n                        ? character.description\r\n                        : \"A dark and mysterious past.\"}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className=\"mx-4 bg-green-50 rounded-lg shadow-md mt-4 py-4\">\r\n          <div className=\"font-sans text-3xl\">Gamestate</div>\r\n          <div className=\"flex flex-col justify-center\">\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Current location:\r\n              <div className=\"font-bold\">\r\n                {book.locations[gameState.location].name}\r\n              </div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Latest actions:\r\n              <div className=\"font-bold\">\r\n                TODO: use history to show latest action\r\n              </div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Latest events:\r\n              <div className=\"font-bold\">\r\n                {\r\n                  // Here we slice off the 3 most recently happened events to show in the overview tab. The choice for 3 is arbitrary and was made by the developer himself when programming this part. The same goes for items.\r\n                  gameState.pastEvents.length !== 0\r\n                    ? gameState.pastEvents\r\n                        .slice(0, 3)\r\n                        .map((event) => event + \", \")\r\n                    : \"None\"\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"font-sans text-xl mt-4\">\r\n              Latest item pickups:\r\n              <div className=\"font-bold\">\r\n                {gameState.length !== 0\r\n                  ? gameState.inventoryItems.length !== 0\r\n                    ? gameState.inventoryItems\r\n                        .slice(0, 3)\r\n                        .map((item) => item + \", \")\r\n                    : \"None\"\r\n                  : \"None\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const DefaultButton = ({ children, ...props }) => {\r\n  return (\r\n    <button\r\n      className=\"mt-2 px-4 py-2 font-medium tracking-wide text-white transition-colors duration-200 transform bg-indigo-600 rounded-md hover:bg-indigo-500 focus:outline-none focus:ring focus:ring-indigo-300 focus:ring-opacity-80 disabled:opacity-50\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const ButtonToggleBlocked = ({\r\n  showBlockedState,\r\n  setShowBlockedState,\r\n}) => {\r\n  return (\r\n    <button\r\n      className=\"flex items-center justify-center sm:w-auto sm:mx-1 w-full px-2 py-1 font-medium tracking-wide text-white transition-colors duration-200 transform bg-indigo-600 rounded-md hover:bg-indigo-500\"\r\n      onClick={() => setShowBlockedState(!showBlockedState)}\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"w-5 h-5 mx-1\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n        />\r\n      </svg>\r\n      <span className=\"mx-1\">Toggle blocked elements</span>\r\n    </button>\r\n  );\r\n};\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { goToVictoryWindow } from \"../modules/gameEndingFunctions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst colorMap = {\r\n  EVENT_HAPPENS: \"blue\",\r\n  FOLLOW_PATH: \"pink\",\r\n  ARRIVE_AT_LOCATION: \"green\",\r\n  PICK_UP_ITEM: \"yellow\",\r\n  GET_ITEM_NPC: \"yellow\",\r\n  GET_ITEM_THING: \"yellow\",\r\n  GET_ITEM_COMBAT: \"yellow\",\r\n  NPC_INTERACTION: \"purple\",\r\n  NPC_RESPONSE: \"purple\",\r\n  TELEPORTED: \"blue\",\r\n  THING_INTERACTION: \"cyan\",\r\n  COMBAT_START: \"red\",\r\n  COMBAT_MOVE: \"red\",\r\n  COMBAT_END: \"red\",\r\n  GAME_FINISHED: \"fuchsia\",\r\n};\r\n\r\nconst titleMap = {\r\n  EVENT_HAPPENS: \"An event happens\",\r\n  FOLLOW_PATH: \"You follow a path\",\r\n  ARRIVE_AT_LOCATION: \"You arrive at a location\",\r\n  PICK_UP_ITEM: \"You pick up an item\",\r\n  GET_ITEM_NPC: \"You receive an item\",\r\n  GET_ITEM_THING: \"You receive an item\",\r\n  GET_ITEM_COMBAT: \"You receive an item\",\r\n  NPC_INTERACTION: \"You interact with an NPC\",\r\n  NPC_RESPONSE: \"The NPC Responds\",\r\n  TELEPORTED: \"You are teleported\",\r\n  THING_INTERACTION: \"You interact with a thing\",\r\n  COMBAT_START: \"A Battle Starts\",\r\n  COMBAT_MOVE: \"You act in combat\",\r\n  COMBAT_END: \"A Battle Ends\",\r\n  GAME_FINISHED: \"The game ends\",\r\n};\r\n\r\nexport const Reaction = ({ type, dismiss, ...props }) => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\"flex w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n      <div\r\n        className={`flex-none flex items-center justify-center w-12 bg-${colorMap[type]}-500`}\r\n      >\r\n        <svg\r\n          className=\"w-6 h-6 text-white fill-current\"\r\n          viewBox=\"0 0 40 40\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"M20 3.33331C10.8 3.33331 3.33337 10.8 3.33337 20C3.33337 29.2 10.8 36.6666 20 36.6666C29.2 36.6666 36.6667 29.2 36.6667 20C36.6667 10.8 29.2 3.33331 20 3.33331ZM21.6667 28.3333H18.3334V25H21.6667V28.3333ZM21.6667 21.6666H18.3334V11.6666H21.6667V21.6666Z\" />\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"px-4 py-2 -mx-3 flex-auto\">\r\n        <div className=\"mx-3\">\r\n          <span\r\n            className={`font-semibold text-${colorMap[type]}-500 dark:text-${colorMap[type]}-400`}\r\n          >\r\n            {titleMap[type]}\r\n          </span>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-200\">\r\n            {props.message}\r\n          </p>\r\n          {type === \"GAME_FINISHED\" && (\r\n            <DefaultButton\r\n              onClick={() => {\r\n                goToVictoryWindow(navigate);\r\n              }}\r\n            >\r\n              Go to ending screen\r\n            </DefaultButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n        className=\"p-1 transition-colors duration-200 transform rounded-md hover:bg-opacity-25 hover:bg-gray-600 focus:outline-none self-center mr-3\"\r\n        onClick={dismiss}\r\n      >\r\n        <svg\r\n          className=\"w-5 h-5\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M6 18L18 6M6 6L18 18\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","\r\n\r\nexport function goToVictoryWindow(navigate) {\r\n\r\n  navigate('/finish');\r\n}","// Requirements\r\nexport const checkRequirements = (gameState, requirements = []) => {\r\n  let reqMet = true;\r\n  let blocked = false;\r\n  requirements.forEach((requirement) => {\r\n    switch (requirement.type) {\r\n      case \"EVENT_DID_HAPPEN\":\r\n        if (!gameState.pastEvents.includes(requirement.id)) {\r\n          reqMet = false;\r\n        }\r\n        break;\r\n      case \"ITEM_IN_INVENTORY\":\r\n        if (!gameState.inventoryItems.includes(requirement.id)) {\r\n          reqMet = false;\r\n        }\r\n        break;\r\n      case \"EVENT_NOT_HAPPENED\":\r\n        if (gameState.pastEvents.includes(requirement.id)) {\r\n          blocked = true;\r\n        }\r\n        break;\r\n      case \"ITEM_NOT_IN_INVENTORY\":\r\n        if (gameState.inventoryItems.includes(requirement.id)) {\r\n          blocked = true;\r\n        }\r\n        break;      \r\n      default:\r\n        // Do Nothing\r\n        break;\r\n    }\r\n  });\r\n\r\n  return reqMet && !blocked;\r\n};\r\n","import { checkRequirements } from \"./requirements\";\r\n\r\n// EXPORTS\r\n\r\n// NPC\r\nexport const getNpc = (book, gameState) => {\r\n  let npcId = gameState.npc;\r\n  return {\r\n    name: book.npcs[npcId].name,\r\n    description: book.npcs[npcId].description,\r\n    options: makeNpcTalkOptionsList(book, gameState, npcId),\r\n  };\r\n};\r\n\r\n// Thing\r\nexport const getThing = (book, gameState) => {\r\n  let thingId = gameState.thing;\r\n  return {\r\n    name: book.things[thingId].name,\r\n    description: book.things[thingId].description,\r\n    options: makeThingInteractOptionsList(book, gameState, thingId),\r\n  };\r\n};\r\n\r\n// Location\r\nexport const getLocation = (book, gameState) => {\r\n  let locationId = checkOverride(book, gameState, gameState.location);\r\n  return {\r\n    name: book.locations[locationId].name,\r\n    description: book.locations[locationId].description,\r\n    items: makeLocationItemList(book, gameState, locationId),\r\n    npcs: makeLocationNpcList(book, gameState, locationId),\r\n    things: makeLocationThingList(book, gameState, locationId),\r\n    paths: makeLocationPathList(book, gameState, locationId),\r\n  };\r\n};\r\n\r\nexport const checkOverride = (book, gameState, locationId) => {\r\n  if (!book.locations[locationId].override) return locationId;\r\n  const override = book.locations[locationId].override.find((override) =>\r\n    checkRequirements(gameState, override.requirements),\r\n  );\r\n  if (override) return checkOverride(book, gameState, override.byLocationId);\r\n  return locationId;\r\n};\r\n\r\n// Combat\r\nexport const getCombat = (book, gameState) => {\r\n  let combatId = gameState.combat;\r\n  return {\r\n    ...book.combats[gameState.combat],\r\n    options: makeCombatOptionsList(book, gameState, combatId),\r\n  };\r\n};\r\n\r\n// Inventory\r\nexport const makeInventoryItemList = (book, gameState) => {\r\n  return (\r\n    gameState.inventoryItems &&\r\n    gameState.inventoryItems.map((itemId) => ({\r\n      ...book.items[itemId],\r\n    }))\r\n  );\r\n};\r\n\r\n// HELPER FUNCTIONS\r\n\r\n// NPC\r\nconst makeNpcTalkOptionsList = (book, gameState, npcId) => {\r\n  return (\r\n    book.npcs[npcId].options &&\r\n    book.npcs[npcId].options.map((option) => {\r\n      return {\r\n        reqMet: checkRequirements(gameState, option.requirements),\r\n        text: option.text,\r\n        response: option.response,\r\n        events: option.events,\r\n        items: option.items,\r\n        toLocationId: option.toLocationId,\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\n// Things\r\nconst makeThingInteractOptionsList = (book, gameState, thingId) => {\r\n  return (\r\n    book.things[thingId].options &&\r\n    book.things[thingId].options.map((option) => {\r\n      return {\r\n        reqMet: checkRequirements(gameState, option.requirements),\r\n        text: option.text,\r\n        response: option.response,\r\n        events: option.events,\r\n        items: option.items,\r\n        toLocationId: option.toLocationId,\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\n// Combat\r\nconst makeCombatOptionsList = (book, gameState, combatId) => {\r\n  return (\r\n    book.combats[combatId].options &&\r\n    book.combats[combatId].options.map((option) => {\r\n      return {\r\n        reqMet: checkRequirements(gameState, option.requirements),\r\n        text: option.text,\r\n        response: option.response,\r\n        events: option.events,\r\n        items: option.items,\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\n// Location\r\nconst makeLocationPathList = (book, gameState, locationId) => {\r\n  return (\r\n    book.locations[locationId].paths &&\r\n    book.locations[locationId].paths.map((path) => {\r\n      return {\r\n        reqMet: checkRequirements(gameState, path.requirements),\r\n        toLocationId: path.toLocationId,\r\n        name: path.name,\r\n        description: path.description,\r\n        events: path.events,\r\n      };\r\n    })\r\n  );\r\n};\r\n\r\nconst makeLocationItemList = (book, gameState, locationId) => {\r\n  return (\r\n    book.locations[locationId].items &&\r\n    book.locations[locationId].items\r\n      .map((item) => ({\r\n        ...book.items[item.id],\r\n        id: item.id,\r\n        toLocationId: item.toLocationId,\r\n        isPresent: !gameState.inventoryItems.includes(item.id),\r\n        reqMet: checkRequirements(gameState, item.requirements),\r\n        events: item.events,\r\n      }))\r\n      .filter((item) => item.isPresent)\r\n  );\r\n};\r\n\r\nconst makeLocationNpcList = (book, gameState, locationId) => {\r\n  return (\r\n    book.locations[locationId].npcs &&\r\n    book.locations[locationId].npcs.map((npc) => ({\r\n      ...book.npcs[npc.id],\r\n      id: npc.id,\r\n      reqMet: checkRequirements(gameState, npc.requirements),\r\n    }))\r\n  );\r\n};\r\n\r\nconst makeLocationThingList = (book, gameState, locationId) => {\r\n  return (\r\n    book.locations[locationId].things &&\r\n    book.locations[locationId].things.map((thing) => ({\r\n      ...book.things[thing.id],\r\n      id: thing.id,\r\n      reqMet: checkRequirements(gameState, thing.requirements),\r\n    }))\r\n  );\r\n};\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { ElementHeader } from \"../components/Elements\";\r\n\r\nexport const Path = ({\r\n  reqMet,\r\n  toLocationId,\r\n  name,\r\n  description,\r\n  events,\r\n  handleAction,\r\n}) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-pink-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"Path\" color=\"pink\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n        {description}\r\n      </p>\r\n\r\n      <DefaultButton\r\n        children={\"Follow this path to \" + name}\r\n        onClick={() =>\r\n          handleAction({\r\n            type: \"TAKE_PATH\",\r\n            path: { name, description, toLocationId, events },\r\n          })\r\n        }\r\n        disabled={!reqMet}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Path;\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { ElementHeader } from \"../components/Elements\";\r\n\r\nexport const Item = ({\r\n  id,\r\n  reqMet,\r\n  name,\r\n  description,\r\n  events,\r\n  toLocationId,\r\n  handleAction,\r\n}) => (\r\n  <div className=\"max-w-2xl px-8 py-4 mx-auto bg-yellow-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n    <ElementHeader title={name} tag=\"Item\" color=\"yellow\" />\r\n\r\n    <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n      {description}\r\n    </p>\r\n\r\n    <DefaultButton\r\n      children={\"Pick up \" + name}\r\n      onClick={() =>\r\n        handleAction({\r\n          type: \"TAKE_ITEM\",\r\n          item: { id, name, description, events, toLocationId },\r\n        })\r\n      }\r\n      disabled={!reqMet}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport const InventoryItem = ({ name, description, image }) => (\r\n  <div className=\"max-w-2xl px-8 py-4 mx-auto bg-yellow-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n    <ElementHeader title={name} tag=\"Item\" color=\"yellow\" />\r\n\r\n    <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n      {description}\r\n    </p>\r\n    {image && (\r\n      <DefaultButton\r\n        children={\"Show item\"}\r\n        onClick={() => {\r\n          window.open(\r\n            image,\r\n            \"targetWindow\",\r\n            \"toolbar=no, location=no, status=no, menubar=no, scrollbars=yes, resizable=yes, width=1090px, height=550px, top=25px left=120px\",\r\n          );\r\n        }}\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Item;\r\n","import { DefaultButton } from \"./Buttons\";\r\nimport { ElementHeader } from \"./Elements\";\r\n\r\nexport const Npc = ({ id, reqMet, name, description, handleAction }) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-purple-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"NPC\" color=\"purple\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n        {description}\r\n      </p>\r\n\r\n      <DefaultButton\r\n        children={\"Approach \" + name}\r\n        onClick={() => {\r\n          handleAction({\r\n            type: \"START_NPC\",\r\n            npcId: id,\r\n          });\r\n        }}\r\n        disabled={!reqMet}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Npc;\r\n","import { DefaultButton } from \"./Buttons\";\r\nimport { ElementHeader } from \"./Elements\";\r\n\r\nexport const Thing = ({ id, reqMet, name, description, handleAction }) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-cyan-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"Thing\" color=\"cyan\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n        {description}\r\n      </p>\r\n\r\n      <DefaultButton\r\n        children={\"Interact with \" + name}\r\n        onClick={() => {\r\n          handleAction({\r\n            type: \"START_THING\",\r\n            thingId: id,\r\n          });\r\n        }}\r\n        disabled={!reqMet}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Thing;\r\n","import { useState } from \"react\";\r\nimport { Path } from \"./Path\";\r\nimport { Item } from \"./Item\";\r\nimport { Npc } from \"./Npc\";\r\nimport { Thing } from \"./Thing\";\r\nimport { DefaultButton, ButtonToggleBlocked } from \"./Buttons\";\r\n\r\nexport const ElementList = ({ type, elements, handleAction }) => {\r\n  const [showBlockedState, setShowBlockedState] = useState(false);\r\n  let elementList = elements.filter(\r\n    (element) => element.reqMet || showBlockedState,\r\n  );\r\n  return (\r\n    elements && (\r\n      <div className=\"mt-4\">\r\n        <span className=\"text-sm font-light text-gray-600 dark:text-gray-400 flex items-center justify-between\">\r\n          {type}\r\n          <ButtonToggleBlocked\r\n            showBlockedState={showBlockedState}\r\n            setShowBlockedState={setShowBlockedState}\r\n          />\r\n        </span>\r\n        <ul>\r\n          {elementList.map((element, index) => (\r\n            <li key={index} className=\"mt-2\">\r\n              {type === \"Paths\" && (\r\n                <Path {...element} handleAction={handleAction} />\r\n              )}\r\n              {type === \"Items\" && (\r\n                <Item {...element} handleAction={handleAction} />\r\n              )}\r\n              {type === \"Npcs\" && (\r\n                <Npc {...element} handleAction={handleAction} />\r\n              )}\r\n              {type === \"Things\" && (\r\n                <Thing {...element} handleAction={handleAction} />\r\n              )}\r\n              {type === \"Options\" && (\r\n                <DefaultButton\r\n                  onClick={() => {\r\n                    handleAction({\r\n                      type: \"TALK_NPC\",\r\n                      option: element,\r\n                    });\r\n                  }}\r\n                  disabled={!element.reqMet}\r\n                >\r\n                  {element.text}\r\n                </DefaultButton>\r\n              )}\r\n              {type === \"CombatOptions\" && (\r\n                <DefaultButton\r\n                  onClick={() => {\r\n                    handleAction({\r\n                      type: \"MOVE_COMBAT\",\r\n                      option: element,\r\n                    });\r\n                  }}\r\n                  disabled={!element.reqMet}\r\n                >\r\n                  {element.text}\r\n                </DefaultButton>\r\n              )}\r\n              {type === \"ThingOptions\" && (\r\n                <DefaultButton\r\n                  onClick={() => {\r\n                    handleAction({\r\n                      type: \"INTERACT_THING\",\r\n                      option: element,\r\n                    });\r\n                  }}\r\n                  disabled={!element.reqMet}\r\n                >\r\n                  {element.text}\r\n                </DefaultButton>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport const ElementHeader = ({ title, tag, color }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-between\">\r\n      <h1 className=\"text-xl font-bold text-gray-700 dark:text-white\">\r\n        {title}\r\n      </h1>\r\n      <div\r\n        className={\r\n          \"px-3 py-1 text-sm font-bold text-gray-100 bg-\" +\r\n          color +\r\n          \"-600 rounded\"\r\n        }\r\n      >\r\n        {tag}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ElementList, ElementHeader } from \"../components/Elements\";\r\n\r\nexport const Location = ({\r\n  name,\r\n  description,\r\n  items,\r\n  npcs,\r\n  things,\r\n  paths,\r\n  handleAction,\r\n}) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-green-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"Location\" color=\"green\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300 whitespace-pre-wrap\">\r\n        {description}\r\n      </p>\r\n\r\n      {items &&\r\n        items.length > 0 && ( // This is needed to not render items when they are all picked up\r\n          <ElementList\r\n            type=\"Items\"\r\n            elements={items}\r\n            handleAction={handleAction}\r\n          />\r\n        )}\r\n\r\n      {npcs && (\r\n        <ElementList type=\"Npcs\" elements={npcs} handleAction={handleAction} />\r\n      )}\r\n\r\n      {things && (\r\n        <ElementList\r\n          type=\"Things\"\r\n          elements={things}\r\n          handleAction={handleAction}\r\n        />\r\n      )}\r\n\r\n      {paths && (\r\n        <ElementList\r\n          type=\"Paths\"\r\n          elements={paths}\r\n          handleAction={handleAction}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { ElementList, ElementHeader } from \"../components/Elements\";\r\n\r\nexport const NpcTalk = ({ name, description, options, handleAction }) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-purple-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"NPC\" color=\"purple\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300\">{description}</p>\r\n      <div>\r\n        {options && (\r\n          <ElementList\r\n            type=\"Options\"\r\n            elements={options}\r\n            handleAction={handleAction}\r\n          />\r\n        )}\r\n        <div className=\"text-right\">\r\n          <DefaultButton\r\n            onClick={() => {\r\n              handleAction({\r\n                type: \"END_NPC\",\r\n                npc: { name, description },\r\n              });\r\n            }}\r\n          >\r\n            End conversation\r\n          </DefaultButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NpcTalk;\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { ElementList, ElementHeader } from \"../components/Elements\";\r\n\r\nexport const ThingInteract = ({ name, description, options, handleAction }) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-cyan-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={name} tag=\"Thing\" color=\"cyan\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300\">{description}</p>\r\n      <div>\r\n        {options && (\r\n          <ElementList\r\n            type=\"ThingOptions\"\r\n            elements={options}\r\n            handleAction={handleAction}\r\n          />\r\n        )}\r\n        <div className=\"text-right\">\r\n          <DefaultButton\r\n            onClick={() => {\r\n              handleAction({\r\n                type: \"END_THING\",\r\n                thing: { name, description },\r\n              });\r\n            }}\r\n          >\r\n            Stop interacting\r\n          </DefaultButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThingInteract;\r\n","export const Hint = ({ hintText, toggle }) => {\r\n  return (\r\n    <div className=\"absolute m-auto\tinset-1/4 bg-orange-200 rounded-lg z-10\">\r\n      <p className=\"font-serif text-5xl text-green-600 text-center py-4\">\r\n        Hint\r\n      </p>\r\n      <p className=\"font-serif text-lg text-green-600 mx-16 overflow-auto max-h-80\">\r\n        {hintText}\r\n      </p>\r\n      <button\r\n        className=\"absolute rounded-lg bg-green-200 max-w-max p-4 cursor-pointer right-2 bottom-2\"\r\n        onClick={toggle}\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { Hint } from \"./Hint\";\r\nimport { useState } from \"react\";\r\n\r\nexport const HintButton = ({ hintText }) => {\r\n  const [toggled, setToggled] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setToggled(!toggled);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"rounded-full bg-green-600 max-w-max p-4 cursor-pointer absolute\"\r\n        onClick={toggle}\r\n      >\r\n        <img src=\"https://i.imgur.com/HnKEc18.png\" alt=\"hint\" width=\"80px\" />\r\n      </div>\r\n      {toggled && (\r\n        <Hint hintText={hintText} setToggled={setToggled} toggle={toggle} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { DefaultButton } from \"../components/Buttons\";\r\nimport { ElementList, ElementHeader } from \"../components/Elements\";\r\n\r\nexport const Combat = ({ title, description, options, handleAction }) => {\r\n  return (\r\n    <div className=\"max-w-2xl px-8 py-4 mx-auto bg-red-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n      <ElementHeader title={title} tag=\"Combat\" color=\"red\" />\r\n\r\n      <p className=\"mt-2 text-gray-600 dark:text-gray-300\">{description}</p>\r\n      <div>\r\n        {options && (\r\n          <ElementList\r\n            type=\"CombatOptions\"\r\n            elements={options}\r\n            handleAction={handleAction}\r\n          />\r\n        )}\r\n        <div className=\"text-center\">\r\n          <DefaultButton\r\n            onClick={() => {\r\n              handleAction({\r\n                type: \"END_COMBAT\",\r\n                combatTitle: title,\r\n              });\r\n            }}\r\n          >\r\n            Leave combat\r\n          </DefaultButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combat;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Reaction } from \"./Reaction\";\r\nimport {\r\n  getLocation,\r\n  getNpc,\r\n  getThing,\r\n  getCombat,\r\n} from \"../modules/listFunctions\";\r\nimport { Location } from \"../components/Location\";\r\nimport { NpcTalk } from \"./NpcTalk\";\r\nimport { ThingInteract } from \"./ThingInteract\";\r\nimport { checkForHints } from \"../modules/hintFunctions\";\r\nimport { HintButton } from \"../components/HintButton\";\r\nimport { Combat } from \"./Combat\";\r\n\r\nexport const GameTab = ({ book, gameState, changeLog, handleAction }) => {\r\n  // Stores latest reaction in state, so they can be dismissed\r\n  const [reactions, setReactions] = useState(changeLog.reactions);\r\n  // When a new action is done, reset the reactions\r\n  useEffect(() => setReactions(changeLog.reactions), [changeLog]);\r\n  // Check for available hints\r\n  const hint = checkForHints(book, gameState);\r\n\r\n  return (\r\n    <div>\r\n      {hint && <HintButton hintText={hint} />}\r\n\r\n      {reactions && (\r\n        <ul className=\"mb-5\">\r\n          {reactions.map((reaction, i) => (\r\n            <li key={i} className=\"mt-3\">\r\n              <Reaction\r\n                {...reaction}\r\n                dismiss={() => {\r\n                  const newReactions = reactions.filter((_, j) => i !== j);\r\n                  setReactions(newReactions);\r\n                }}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {gameState.combat ? (\r\n        <Combat {...getCombat(book, gameState)} handleAction={handleAction} />\r\n      ) : gameState.npc ? (\r\n        <NpcTalk {...getNpc(book, gameState)} handleAction={handleAction} />\r\n      ) : gameState.thing ? (\r\n        <ThingInteract\r\n          {...getThing(book, gameState)}\r\n          handleAction={handleAction}\r\n        />\r\n      ) : (\r\n        <Location\r\n          {...getLocation(book, gameState)}\r\n          handleAction={handleAction}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export const checkForHints = (book, gameState) => {\r\n  if (gameState.npc) {\r\n    if (book.npcs[gameState.npc].hint) {\r\n      return book.npcs[gameState.npc].hint;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (gameState.combat) {\r\n    if (book.combats[gameState.combat].hint) {\r\n      return book.combats[gameState.combat].hint;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (gameState.thing) {\r\n    if (book.things[gameState.thing].hint) {\r\n      return book.things[gameState.thing].hint;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (gameState.location) {\r\n    if (book.locations[gameState.location].hint) {\r\n      return book.locations[gameState.location].hint;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { InventoryItem } from \"../components/Item\";\r\n\r\nexport const InventoryTab = ({ inventoryItems }) => {\r\n  return (\r\n    <div className=\"p-4\">\r\n      <div className=\"max-w-2xl px-8 py-4 mx-auto bg-red-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h1 className=\"text-2xl font-bold text-gray-700 dark:text-white\">\r\n            Inventory\r\n          </h1>\r\n          <div className=\"px-3 py-1 text-sm font-bold text-gray-100 bg-red-600 rounded\">\r\n            Inventory\r\n          </div>\r\n        </div>\r\n\r\n        {inventoryItems && (\r\n          <div className=\"mt-4\">\r\n            <ul>\r\n              {inventoryItems.map((inventoryItem, index) => (\r\n                <li key={index} className=\"mt-2\">\r\n                  <InventoryItem {...inventoryItem} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","const colorMap = {\r\n  START_STORY: \"purple\",\r\n  TAKE_PATH: \"pink\",\r\n  TAKE_ITEM: \"yellow\",\r\n  START_NPC: \"purple\",\r\n  TALK_NPC: \"purple\",\r\n  END_NPC: \"purple\",\r\n  START_THING: \"cyan\",\r\n  INTERACT_THING: \"cyan\",\r\n  END_THING: \"cyan\",\r\n  MOVE_COMBAT: \"red\",\r\n  END_COMBAT: \"red\",\r\n};\r\n\r\nconst textMap = {\r\n  START_STORY: \"You started your story in\",\r\n  TAKE_PATH: \"You took a path to\",\r\n  TAKE_ITEM: \"You took an item in\",\r\n  START_NPC: \"You started talking to an NPC in\",\r\n  TALK_NPC: \"You said something to an NPC in\",\r\n  END_NPC: \"You ended your conversation with an NPC in\",\r\n  MOVE_COMBAT: \"You made a move in an combat in\",\r\n  END_COMBAT: \"You ended combat in\",\r\n};\r\n\r\nexport const HistoryTab = ({ history, handleAction }) => {\r\n  const reversedHistory = history.slice().reverse();\r\n\r\n  return (\r\n    <div className=\"mx-auto max-w-xl px-8 py-4 my-10 bg-blue-50 rounded-lg shadow-md dark:bg-gray-800 \">\r\n      <div className=\"flex items-start justify-between\">\r\n        <p className=\"text-gray-600 dark:text-gray-300 bold font-sans text-lg\">\r\n          The last actions you did were:\r\n        </p>\r\n        <div className=\"ml-2 px-3 py-1 text-sm font-bold text-gray-100 bg-blue-600 rounded\">\r\n          History\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className=\"text-gray-600 dark:text-gray-300 bold font-sans text-base\">\r\n          {reversedHistory.map(({ gameState, changeLog }, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"flex justify-between mt-2 px-4 py-2 bg-green-50 shadow-md\"\r\n            >\r\n              <div className=\"px-2 text-black-100\">\r\n                <div\r\n                  className={`bg-${\r\n                    colorMap[changeLog.action.type]\r\n                  }-300 rounded-lg px-3 py-1`}\r\n                >\r\n                  {textMap[changeLog.action.type] +\r\n                    \" location \" +\r\n                    gameState.location}\r\n                </div>\r\n              </div>\r\n              <button\r\n                onClick={() => {\r\n                  handleAction({ type: \"BACK_IN_TIME\", steps: index });\r\n                }}\r\n                className=\"text-black-600 bg-red-100 px-3 py-1 rounded-lg shadow-md\"\r\n              >\r\n                Back to here\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\n\r\nexport const FinishTab = ({ gameState }) => {\r\n  if (gameState && gameState.gameFinished) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"max-w-2xl px-8 py-4 mx-auto bg-fuchsia-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h1 className=\"text-2xl font-bold text-gray-700 dark:text-white\">\r\n              Game ending\r\n            </h1>\r\n          </div>\r\n          <h2 className=\"py-8\">Items gathered:</h2>\r\n          <div className=\"font-bold\">\r\n            {gameState.inventoryItems.map((item) => item + \", \")}\r\n          </div>\r\n          <h2 className=\"py-8\">Events triggered:</h2>\r\n          <div className=\"font-bold\">\r\n            {gameState.pastEvents.map((event) => event + \", \")}\r\n          </div>\r\n          <div className=\"py-8\">More stats to come...</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <div className=\"max-w-2xl px-8 py-4 mx-auto bg-fuchsia-50 rounded-lg shadow-md dark:bg-gray-800\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h1 className=\"text-2xl font-bold text-gray-700 dark:text-white\">\r\n              You have not finished the game yet.\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport { OverviewTab } from \"./OverviewTab\";\r\nimport { GameTab } from \"./GameTab\";\r\nimport { InventoryTab } from \"./InventoryTab\";\r\nimport { HistoryTab } from \"./HistoryTab\";\r\nimport { FinishTab } from \"./FinishTab\";\r\nimport { makeInventoryItemList } from \"../modules/listFunctions\";\r\nimport \"../styles/background.css\";\r\n\r\nexport const Router = ({\r\n  book,\r\n  gameState,\r\n  changeLog,\r\n  history,\r\n  handleAction,\r\n  backgroundImageUrl,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"fade-in-1s background\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImageUrl})`,\r\n      }}\r\n    >\r\n      <BrowserRouter>\r\n        <nav className=\"bg-white shadow dark:bg-gray-800\">\r\n          <div className=\"container px-6 py-4 mx-auto md:flex md:justify-between md:items-center\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1\r\n                  className=\"text-2xl font-bold text-gray-800 dark:text-white lg:text-3xl\"\r\n                  to=\"/\"\r\n                >\r\n                  Basements & Lizards\r\n                </h1>\r\n              </div>\r\n\r\n              <div className=\"flex md:hidden\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"text-gray-500 dark:text-gray-200 hover:text-gray-600 dark:hover:text-gray-400 focus:outline-none focus:text-gray-600 dark:focus:text-gray-400\"\r\n                  aria-label=\"toggle menu\"\r\n                >\r\n                  <svg viewBox=\"0 0 24 24\" className=\"w-6 h-6 fill-current\">\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"\r\n                    ></path>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"items-center md:flex\">\r\n              <div className=\"flex flex-col md:flex-row md:mx-6\">\r\n                <Link\r\n                  className=\"my-1 text-sm font-medium text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 md:mx-4 md:my-0\"\r\n                  to=\"/basements-and-lizards\"\r\n                >\r\n                  Home\r\n                </Link>\r\n                <Link\r\n                  className=\"my-1 text-sm font-medium text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 md:mx-4 md:my-0\"\r\n                  to=\"/basements-and-lizards/game\"\r\n                >\r\n                  Game\r\n                </Link>\r\n                <Link\r\n                  className=\"my-1 text-sm font-medium text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 md:mx-4 md:my-0\"\r\n                  to=\"/basements-and-lizards/inventory\"\r\n                >\r\n                  Inventory\r\n                </Link>\r\n                <Link\r\n                  className=\"my-1 text-sm font-medium text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 md:mx-4 md:my-0\"\r\n                  to=\"/basements-and-lizards/history\"\r\n                >\r\n                  History\r\n                </Link>\r\n                {gameState.gameFinished && (\r\n                  <Link\r\n                    className=\"my-1 text-sm font-medium text-gray-700 dark:text-gray-200 hover:text-indigo-500 dark:hover:text-indigo-400 md:mx-4 md:my-0\"\r\n                    to=\"/basements-and-lizards/finish\"\r\n                  >\r\n                    Finish\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<OverviewTab book={book} gameState={gameState} />}\r\n          />\r\n\r\n          <Route\r\n            path=\"/basements-and-lizards/game\"\r\n            element={\r\n              <GameTab\r\n                book={book}\r\n                gameState={gameState}\r\n                changeLog={changeLog}\r\n                handleAction={handleAction}\r\n              />\r\n            }\r\n          />\r\n\r\n          <Route\r\n            path=\"/basements-and-lizards/inventory\"\r\n            element={\r\n              <InventoryTab\r\n                inventoryItems={makeInventoryItemList(book, gameState)}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/basements-and-lizards/history\"\r\n            element={\r\n              <HistoryTab history={history} handleAction={handleAction} />\r\n            }\r\n          />\r\n\r\n          <Route\r\n            path=\"/basements-and-lizards/finish\"\r\n            element={<FinishTab gameState={gameState} />}\r\n          />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n","import { checkRequirements } from \"./requirements\";\r\nimport { checkOverride } from \"./listFunctions\";\r\n\r\nconst doEvents = (eventIds, book, gameState) => {\r\n  const reactions = [];\r\n  const newEventIds = [];\r\n  const revertEventIds = [];\r\n\r\n  // Handle inputted events\r\n  eventIds &&\r\n    eventIds.forEach((eventId) => {\r\n      if (gameState.pastEvents.includes(eventId)) return;\r\n\r\n      const event = book.events[eventId];\r\n\r\n      if (\r\n        event.requirements &&\r\n        !checkRequirements(gameState, event.requirements)\r\n      )\r\n        return;\r\n\r\n      newEventIds.push(eventId);\r\n\r\n      if (event.revertEvents) {\r\n        revertEventIds.push(...event.revertEvents);\r\n      }\r\n\r\n      // Add a bit more here later\r\n      if (eventId === book.finalEvent) {\r\n        gameState.gameFinished = true;\r\n        reactions.push({\r\n          type: \"GAME_FINISHED\",\r\n          message: \"You finish the game!\",\r\n        });\r\n      }\r\n\r\n      event.message &&\r\n        reactions.push({ type: \"EVENT_HAPPENS\", message: event.message });\r\n    });\r\n\r\n  // Return reactions array\r\n  return { reactions, newEventIds, revertEventIds, gameState };\r\n};\r\n\r\nexport const handleTakeItem = (item, book, gameState) => {\r\n  const reactions = [];\r\n  let pastEvents = [...gameState.pastEvents];\r\n  let eventResponse;\r\n\r\n  reactions.push({\r\n    type: \"PICK_UP_ITEM\",\r\n    message: `You pick up ${item.name}`,\r\n  });\r\n\r\n  eventResponse = doEvents(item.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Check for a teleport\r\n  let locationId = gameState.location;\r\n  if (item.toLocationId) {\r\n    locationId = item.toLocationId;\r\n    const location = book.locations[locationId];\r\n\r\n    reactions.push({\r\n      type: \"TELEPORTED\",\r\n      message: `You are teleported to ${location.name}`,\r\n    });\r\n\r\n    // The party arrives at the location.\r\n    reactions.push({\r\n      type: \"ARRIVE_AT_LOCATION\",\r\n      message: `You arrive at ${location.name}`,\r\n    });\r\n\r\n    // Handle the events that happen at the new location.\r\n    eventResponse = doEvents(location.events, book, gameState);\r\n    gameState = eventResponse.gameState;\r\n    reactions.push(...eventResponse.reactions);\r\n    pastEvents.push(...eventResponse.newEventIds);\r\n    // https://stackoverflow.com/questions/1187518\r\n    pastEvents = pastEvents.filter(\r\n      (x) => !eventResponse.revertEventIds.includes(x),\r\n    );\r\n\r\n    // Check if combat arises at new location.\r\n    location.combat &&\r\n      location.combat.find((locationCombat) => {\r\n        if (\r\n          !locationCombat.requirements ||\r\n          (locationCombat.requirements &&\r\n            checkRequirements(gameState, locationCombat.requirements))\r\n        ) {\r\n          reactions.push({\r\n            type: \"COMBAT_START\",\r\n            message: `You enter combat named: ${\r\n              book.combats[locationCombat.id].title\r\n            }`,\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    location: locationId,\r\n    inventoryItems: [...gameState.inventoryItems, item.id],\r\n    pastEvents,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleTakePath = (path, book, gameState) => {\r\n  const reactions = [];\r\n  let pastEvents = [...gameState.pastEvents];\r\n  let eventResponse;\r\n\r\n  // The party follows the path that was chosen.\r\n  reactions.push({\r\n    type: \"FOLLOW_PATH\",\r\n    message: `You take ${path.name}`,\r\n  });\r\n\r\n  // Handle the events that happen on the path.\r\n  eventResponse = doEvents(path.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Check for overrides on destination\r\n  const locationId = checkOverride(book, gameState, path.toLocationId);\r\n  const location = book.locations[locationId];\r\n\r\n  // The party arrives at the location.\r\n  reactions.push({\r\n    type: \"ARRIVE_AT_LOCATION\",\r\n    message: `You arrive at ${location.name}`,\r\n  });\r\n\r\n  // Handle the events that happen at the new location.\r\n  eventResponse = doEvents(location.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Check if combat arises at new location.\r\n  let combat = null;\r\n\r\n  location.combat &&\r\n    location.combat.find((locationCombat) => {\r\n      if (\r\n        !locationCombat.requirements ||\r\n        (locationCombat.requirements &&\r\n          checkRequirements(gameState, locationCombat.requirements))\r\n      ) {\r\n        reactions.push({\r\n          type: \"COMBAT_START\",\r\n          message: `You enter combat named: ${\r\n            book.combats[locationCombat.id].title\r\n          }`,\r\n        });\r\n        combat = locationCombat.id;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    location: locationId, // This is the overridden locationId\r\n    pastEvents,\r\n    combat,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleStartNpc = (npcId, book, gameState) => {\r\n  const reactions = [];\r\n\r\n  const npc = book.npcs[npcId];\r\n\r\n  reactions.push({\r\n    type: \"NPC_INTERACTION\",\r\n    message: `You approach ${npc.name}`,\r\n  });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    npc: npcId,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleTalkNpc = (option, book, gameState) => {\r\n  const reactions = [];\r\n  let pastEvents = [...gameState.pastEvents];\r\n  const inventoryItems = [...gameState.inventoryItems];\r\n  let eventResponse;\r\n\r\n  reactions.push({\r\n    type: \"NPC_RESPONSE\",\r\n    message: `${option.response}`,\r\n  });\r\n\r\n  // Handle the events.\r\n  eventResponse = doEvents(option.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Handle potential items.\r\n  option.items &&\r\n    option.items.forEach((itemId) => {\r\n      const item = book.items[itemId];\r\n      reactions.push({\r\n        type: \"GET_ITEM_NPC\",\r\n        message: `You receive ${item.name}`,\r\n      });\r\n      inventoryItems.push(itemId);\r\n    });\r\n\r\n  // Check for a teleport\r\n  const teleported = !!option.toLocationId;\r\n  if (teleported) {\r\n    const location = book.locations[option.toLocationId];\r\n\r\n    reactions.push({\r\n      type: \"TELEPORTED\",\r\n      message: `You are teleported to ${location.name}`,\r\n    });\r\n\r\n    // The party arrives at the location.\r\n    reactions.push({\r\n      type: \"ARRIVE_AT_LOCATION\",\r\n      message: `You arrive at ${location.name}`,\r\n    });\r\n\r\n    // Handle the events that happen at the new location.\r\n    eventResponse = doEvents(location.events, book, gameState);\r\n    gameState = eventResponse.gameState;\r\n    reactions.push(...eventResponse.reactions);\r\n    pastEvents.push(...eventResponse.newEventIds);\r\n    // https://stackoverflow.com/questions/1187518\r\n    pastEvents = pastEvents.filter(\r\n      (x) => !eventResponse.revertEventIds.includes(x),\r\n    );\r\n\r\n    // Check if combat arises at new location.\r\n    location.combat &&\r\n      location.combat.find((locationCombat) => {\r\n        if (\r\n          !locationCombat.requirements ||\r\n          (locationCombat.requirements &&\r\n            checkRequirements(gameState, locationCombat.requirements))\r\n        ) {\r\n          reactions.push({\r\n            type: \"COMBAT_START\",\r\n            message: `You enter combat named: ${\r\n              book.combats[locationCombat.id].title\r\n            }`,\r\n          });\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    location: teleported ? option.toLocationId : gameState.location,\r\n    npc: teleported ? null : gameState.npc,\r\n    inventoryItems,\r\n    pastEvents,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleEndNpc = (npc, gameState) => {\r\n  const reactions = [];\r\n\r\n  reactions.push({\r\n    type: \"NPC_INTERACTION\",\r\n    message: `You stop talking with ${npc.name}`,\r\n  });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    npc: null,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleMoveCombat = (option, book, gameState) => {\r\n  const reactions = [];\r\n  let pastEvents = [...gameState.pastEvents];\r\n  const inventoryItems = [...gameState.inventoryItems];\r\n  let eventResponse;\r\n\r\n  reactions.push({\r\n    type: \"COMBAT_MOVE\",\r\n    message: `${option.response}`,\r\n  });\r\n\r\n  // Handle the events.\r\n  eventResponse = doEvents(option.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Handle potential items.\r\n  option.items &&\r\n    option.items.forEach((itemId) => {\r\n      const item = book.items[itemId];\r\n      reactions.push({\r\n        type: \"GET_ITEM_COMBAT\",\r\n        message: `You receive ${item.name}`,\r\n      });\r\n      inventoryItems.push(itemId);\r\n    });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    inventoryItems,\r\n    pastEvents,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleEndCombat = (combatTitle, gameState) => {\r\n  const reactions = [];\r\n\r\n  reactions.push({\r\n    type: \"COMBAT_END\",\r\n    message: `You leave combat named: ${combatTitle}`,\r\n  });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    combat: null,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleStartThing = (thingId, book, gameState) => {\r\n  const reactions = [];\r\n\r\n  const thing = book.things[thingId];\r\n\r\n  reactions.push({\r\n    type: \"THING_INTERACTION\",\r\n    message: `You start interacting with ${thing.name}`,\r\n  });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    thing: thingId,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleInteractThing = (option, book, gameState) => {\r\n  const reactions = [];\r\n  let pastEvents = [...gameState.pastEvents];\r\n  const inventoryItems = [...gameState.inventoryItems];\r\n  let eventResponse;\r\n\r\n  reactions.push({\r\n    type: \"THING_INTERACTION\",\r\n    message: `${option.response}`,\r\n  });\r\n\r\n  // Handle the events.\r\n  eventResponse = doEvents(option.events, book, gameState);\r\n  gameState = eventResponse.gameState;\r\n  reactions.push(...eventResponse.reactions);\r\n  pastEvents.push(...eventResponse.newEventIds);\r\n  // https://stackoverflow.com/questions/1187518\r\n  pastEvents = pastEvents.filter(\r\n    (x) => !eventResponse.revertEventIds.includes(x),\r\n  );\r\n\r\n  // Handle potential items.\r\n  option.items &&\r\n    option.items.forEach((itemId) => {\r\n      const item = book.items[itemId];\r\n      reactions.push({\r\n        type: \"GET_ITEM_THING\",\r\n        message: `You receive ${item.name}`,\r\n      });\r\n      inventoryItems.push(itemId);\r\n    });\r\n\r\n  // Check for a teleport\r\n  const teleported = !!option.toLocationId;\r\n  let combat = null; // Potential combat on new location lands here\r\n  if (teleported) {\r\n    const location = book.locations[option.toLocationId];\r\n\r\n    reactions.push({\r\n      type: \"TELEPORTED\",\r\n      message: `You were teleported to ${location.name}`,\r\n    });\r\n\r\n    // The party arrives at the location.\r\n    reactions.push({\r\n      type: \"ARRIVE_AT_LOCATION\",\r\n      message: `You arrive at ${location.name}`,\r\n    });\r\n\r\n    // Handle the events that happen at the new location.\r\n    eventResponse = doEvents(location.events, book, gameState);\r\n    reactions.push(...eventResponse.reactions);\r\n    pastEvents.push(...eventResponse.newEventIds);\r\n    // https://stackoverflow.com/questions/1187518\r\n    pastEvents = pastEvents.filter(\r\n      (x) => !eventResponse.revertEventIds.includes(x),\r\n    );\r\n\r\n    // Check if combat arises at new location.\r\n    const newGameState = {\r\n      ...gameState,\r\n      location: teleported ? option.toLocationId : gameState.location,\r\n      thing: teleported ? null : gameState.thing,\r\n      inventoryItems,\r\n      pastEvents,\r\n    };\r\n\r\n    location.combat &&\r\n      location.combat.find((locationCombat) => {\r\n        if (\r\n          !locationCombat.requirements ||\r\n          (locationCombat.requirements &&\r\n            checkRequirements(newGameState, locationCombat.requirements))\r\n        ) {\r\n          reactions.push({\r\n            type: \"COMBAT_START\",\r\n            message: `You enter combat named: ${\r\n              book.combats[locationCombat.id].title\r\n            }`,\r\n          });\r\n          combat = locationCombat.id;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    location: teleported ? option.toLocationId : gameState.location,\r\n    thing: teleported ? null : gameState.thing,\r\n    inventoryItems,\r\n    pastEvents,\r\n    combat: teleported ? combat : gameState.combat,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n\r\nexport const handleEndThing = (thing, gameState) => {\r\n  const reactions = [];\r\n\r\n  reactions.push({\r\n    type: \"THING_INTERACTION\",\r\n    message: `You stop interacting with ${thing.name}`,\r\n  });\r\n\r\n  const newGameState = {\r\n    ...gameState,\r\n    thing: null,\r\n  };\r\n\r\n  return { reactions, newGameState };\r\n};\r\n","import { useState } from \"react\";\r\nimport { Router } from \"./Router\";\r\nimport {\r\n  handleTakeItem,\r\n  handleTakePath,\r\n  handleStartNpc,\r\n  handleEndNpc,\r\n  handleTalkNpc,\r\n  handleStartThing,\r\n  handleEndThing,\r\n  handleInteractThing,\r\n  handleMoveCombat,\r\n  handleEndCombat,\r\n} from \"../modules/actions\";\r\n\r\nexport const App = ({ book, backgroundImageUrl }) => {\r\n  // gameState holds all information as a result of all previous actions\r\n  const [gameState, setGameState] = useState({\r\n    location: book[\"initialLocation\"],\r\n    npc: null,\r\n    combat: null,\r\n    thing: null,\r\n    pastEvents: [],\r\n    inventoryItems: [],\r\n    gameFinished: false,\r\n  });\r\n\r\n  // changeLog tracks the changes that are made as a result of the last action\r\n  const [changeLog, setChangeLog] = useState({\r\n    action: { type: \"START_STORY\" },\r\n    reactions: [],\r\n  });\r\n\r\n  // history stores the gameState and changeLog after each action\r\n  // this can be used to go back in time or help with showing what happened\r\n  const [history, setHistory] = useState([{ gameState, changeLog }]);\r\n\r\n  const handleAction = (action) => {\r\n    // Maps the action to the right function.\r\n    // This way, we only have to pass one prop to handle all changes.\r\n\r\n    const applyAction = (response) => {\r\n      const reactions = response.reactions;\r\n      setGameState(response.newGameState);\r\n      setChangeLog({ action, reactions });\r\n      setHistory([\r\n        ...history,\r\n        { gameState: response.newGameState, changeLog: { action, reactions } },\r\n      ]);\r\n    };\r\n\r\n    switch (action.type) {\r\n      case \"TAKE_ITEM\":\r\n        applyAction(handleTakeItem(action.item, book, gameState));\r\n        break;\r\n      case \"TAKE_PATH\":\r\n        applyAction(handleTakePath(action.path, book, gameState));\r\n        break;\r\n      case \"START_NPC\":\r\n        applyAction(handleStartNpc(action.npcId, book, gameState));\r\n        break;\r\n      case \"TALK_NPC\":\r\n        applyAction(handleTalkNpc(action.option, book, gameState));\r\n        break;\r\n      case \"END_NPC\":\r\n        applyAction(handleEndNpc(action.npc, gameState));\r\n        break;\r\n      case \"START_THING\":\r\n        applyAction(handleStartThing(action.thingId, book, gameState));\r\n        break;\r\n      case \"INTERACT_THING\":\r\n        applyAction(handleInteractThing(action.option, book, gameState));\r\n        break;\r\n      case \"END_THING\":\r\n        applyAction(handleEndThing(action.thing, gameState));\r\n        break;\r\n      case \"MOVE_COMBAT\":\r\n        applyAction(handleMoveCombat(action.option, book, gameState));\r\n        break;\r\n      case \"END_COMBAT\":\r\n        applyAction(handleEndCombat(action.combatTitle, gameState));\r\n        break;\r\n      case \"BACK_IN_TIME\":\r\n        setHistory(history.slice(0, history.length - action.steps));\r\n        setGameState(history[history.length - (action.steps + 1)].gameState);\r\n        setChangeLog(history[history.length - (action.steps + 1)].changeLog);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Router\r\n      book={book}\r\n      gameState={gameState}\r\n      changeLog={changeLog}\r\n      history={history}\r\n      handleAction={handleAction}\r\n      backgroundImageUrl={backgroundImageUrl}\r\n    />\r\n  );\r\n};\r\n","export const backgroundImages = [\r\n  \"https://i.ibb.co/121sqp4/14.jpg\",\r\n  \"https://i.ibb.co/vXrxSc1/wallpapersden-com-minimalist-landscape-painting-1920x1080.jpg\",\r\n  \"https://i.ibb.co/VxsbgD5/white-minimalism-01.jpg\",\r\n  \"https://i.ibb.co/PxFqrXB/hand-drawn-minimal-background-23-2149006548.webp\",\r\n]","import { App } from \"./bm-app/App\";\r\nimport { DefaultButton } from \"./components/Buttons\";\r\nimport \"./index.css\";\r\nimport \"./styles/splashscreen.css\";\r\nimport \"./styles/background.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { backgroundImages } from \"./images/backgrounds.js\";\r\n\r\nimport jasper from \"./books/goofyGroceries.json\";\r\nimport fabby from \"./books/lizardBasement.json\";\r\n//import pim from \"./books/bl_pim.json\"; // Koekje\r\n\r\n// Disable this boolean if you dont want the startup screen (please do this when testing)\r\nconst doStartScreen = false;\r\n\r\n// Set app background for this session\r\nconst backgroundImageUrl =\r\n  backgroundImages[Math.floor(Math.random() * backgroundImages.length)];\r\n\r\n// Determine loading message Div wrapper and make it a function\r\nfunction LoadingMessage() {\r\n  return (\r\n    <div className=\"fade-in-out-5s background-gradient h-screen w-screen\">\r\n      <div className=\"h-screen flex bg-no-repeat bg-contain bg-center fade-in-out-5s dlimage\">\r\n        <div className=\"text-6xl font-serif italic text-green-200 w-screen text-center mt-32\">\r\n          Welcome to Dungeons and Lizards\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst bookList = [jasper, fabby];\r\n\r\nconst ChooseBook = ({ setBook }) => (\r\n  <div\r\n    className=\"background\"\r\n    style={{\r\n      backgroundImage: `url(${backgroundImages[0]})`,\r\n    }}\r\n  >\r\n    <ul className=\"p-4 mx-auto max-w-2xl\">\r\n      <h1 className=\"text-6xl\titalic font-bold text-emerald-700 text-center\">\r\n        Basements & Lizards\r\n      </h1>\r\n      {bookList.map((book) => (\r\n        <li\r\n          key={book.name}\r\n          className=\"mt-6 flex flex-col items-center text-justify\tbg-gray-400 rounded-lg p-4\"\r\n        >\r\n          <h2 className=\"text-2xl font-semibold\">{book.name}</h2>\r\n          <p>{book.description}</p>\r\n          <DefaultButton onClick={() => setBook(book)}>\r\n            Play this story now\r\n          </DefaultButton>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport const MainApp = () => {\r\n  // Use states to determine if page is still loading\r\n  const [loading, setLoading] = useState(true);\r\n  const [book, setBook] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Arbitrary 5 second loading time.. can be changes to dynamically listen to an API/server call or whatever\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 5000);\r\n  });\r\n\r\n  if (loading && doStartScreen) return <LoadingMessage />;\r\n  if (!book) return <ChooseBook setBook={setBook} />;\r\n  return <App book={book} backgroundImageUrl={backgroundImageUrl} />;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { MainApp } from \"./MainApp\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MainApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}